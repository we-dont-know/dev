mkdir Dir name

cd Dir name


python3 -m venv venv

source venv/bin/activate


nano app.py

from flask import Flask
app = Flask(__name__)

@app.route('/')
def home():
    return "Hello DevOps!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)




nano test.py
                                                                                                               
import unittest
from app import app

class TestApp(unittest.TestCase):
    def test_home(self):
        tester = app.test_client(self)
        response = tester.get('/')
        self.assertEqual(response.status_code, 200)
        self.assertEqual(response.data, b"Hello DevOps!")

if __name__ == '__main__':
    unittest.main()


nano build.sh

#!/bin/bash
echo "Setting up environment"
python3 -m venv venv
source venv/bin/activate
pip install flask
echo "Environment setup complete. Run the application:"
python3 app.py



-> bash build.sh



-> nano .env

 FLASK_PORT=5000



->pip install python-dotenv

mofyyy app.py


  GNU nano 8.3                                                                                                       app.py                                                                                                         import>
from flask import Flask
from dotenv import load_dotenv

load_dotenv()
app = Flask(__name__)

@app.route('/')
def home():
    return "Hello DevOps!"

if _name_ == '__main__':
    port = int(os.getenv("FLASK_PORT", 5000))
    app.run(port=port)

also addd

@app.route('/health')
def health():
   return {"status":"up"},200



at last

 http://127.0.0.1:5000
import os
from flask import Flask
from dotenv import load_dotenv

load_dotenv()
app = Flask(__name__)

@app.route('/')
def home():
    return "Hello DevOps!"

@app.route('/health')
def health():
    return {"status": "up"}, 200

if __name__ == '__main__':  # <- Fixed this line
    port = int(os.getenv("FLASK_PORT", 5000))
    app.run(port=port)

